{"version":3,"file":"static/js/270.49438395.chunk.js","mappings":"2NACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAA8H,0BAA9H,EAAiK,4B,SCMlJ,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eACQC,GAASC,EAAAA,EAAAA,MAATD,KAEFE,EAAoB,SAAAC,GACxB,OAAQA,EAAMC,OAAOV,MACnB,IAAK,OACHC,EAAQQ,EAAMC,OAAOC,OACrB,MACF,IAAK,SACHR,EAAUM,EAAMC,OAAOC,SAqB7B,OACE,kBAAMC,UAAWC,EAAQC,SAdN,SAAAC,GACnBA,EAAEC,iBACF,OACEV,QADF,IACEA,GAAAA,EAAMW,MAAK,SAAAC,GAAO,OAAIA,EAAQlB,KAAKmB,gBAAkBnB,EAAKmB,iBAE1DC,MAAM,GAAD,OAAIpB,EAAJ,6BAELK,EAAW,CAAEL,KAAAA,EAAME,OAAAA,IACnBD,EAAQ,IACRE,EAAU,MAKZ,WACE,mBAAOS,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,mBACA,kBACED,UAAWC,EACXQ,KAAK,OACLrB,KAAK,OACLW,MAAOX,EACPsB,SAAUd,EACVe,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOb,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,qBACA,kBACED,UAAWC,EACXQ,KAAK,MACLrB,KAAK,SACLW,MAAOT,EACPoB,SAAUd,EACVe,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQJ,KAAK,SAAST,UAAWC,EAAjC,4B,cCrEOa,EAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOjB,OCC/C,EAAuB,0BAAvB,EAA0D,4BCO3C,SAASkB,IACtB,OAAkDC,EAAAA,EAAAA,MAAlD,eAAOC,EAAP,KAAkCC,EAAlC,KAAuBC,UACjBC,GAAcC,EAAAA,EAAAA,IAAYT,GAChC,GAAsCnB,EAAAA,EAAAA,MAAxB6B,EAAd,EAAQ9B,KAAgB2B,EAAxB,EAAwBA,UAElBI,EAAc,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAUR,QAAO,qBAAG5B,KACpCmB,cAAcmB,SAASJ,EAAYf,kBAG1C,OACE,0BACGc,IAAa,sCAEbI,GACCA,EAAeE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIxC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC9B,OACE,gBAAaU,UAAWC,EAAxB,UACGb,EADH,KACWE,GACT,mBACEmB,KAAK,SACLoB,QAAS,kBAAMV,EAAaS,IAC5B5B,UAAWC,EAHb,SAKGmB,EAAa,cAAgB,aAPzBQ,S,cCvBrB,EAAwB,sBAAxB,EAAqD,qBCKtC,SAASE,EAAT,GAA4B,IAAVlB,EAAS,EAATA,MACzBb,GAAQwB,EAAAA,EAAAA,IAAYT,GACpBiB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACE,cAAGhC,UAAWC,EAAd,SAAuBW,KACvB,kBACEH,KAAK,OACLrB,KAAK,SACLW,MAAOA,EACPW,SAAU,SAAAb,GAAK,OAAIkC,GAASE,EAAAA,EAAAA,GAAapC,EAAMC,OAAOC,SACtDC,UAAWC,OCdJ,SAASiC,IACtB,OACE,4BACE,uCACA,SAAChD,EAAD,KACA,sCACA,SAAC4C,EAAD,CAAQlB,MAAM,0BACb,SAACK,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/contactsAPI/filter-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"label\":\"ContactForm_label__-cVXI\",\"text\":\"ContactForm_text__kqq6l\",\"button\":\"ContactForm_button__eSwX9\"};","import {\n  useCreateContactMutation,\n  useFetchContactsQuery,\n} from '../../redux/contactsAPI/contacts-API';\nimport { useState } from 'react';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContact] = useCreateContactMutation();\n  const { data } = useFetchContactsQuery();\n\n  const handleInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n\n      default:\n    }\n    return;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      data?.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      addContact({ name, number });\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span className={s.text}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        <span className={s.text}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export const getFilter = state => state.filter.value;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import {\n  useDeleteContactMutation,\n  useFetchContactsQuery,\n} from '../../redux/contactsAPI/contacts-API';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contactsAPI/filter-selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const [handleDelete, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const filterValue = useSelector(getFilter);\n  const { data: contacts, isLoading } = useFetchContactsQuery();\n\n  const renderContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {isLoading && <p>Loading...</p>}\n\n      {renderContacts &&\n        renderContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} className={s.item}>\n              {name}: {number}\n              <button\n                type=\"button\"\n                onClick={() => handleDelete(id)}\n                className={s.button}\n              >\n                {isDeleting ? 'Deleting...' : 'Delete'}\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"text\":\"Filter_text__uqQRu\"};","import { changeFilter } from '../../redux/contactsAPI/filter-slice';\nimport { getFilter } from '../../redux/contactsAPI/filter-selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ title }) {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      <p className={s.text}>{title}</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n        className={s.input}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter title=\"Find contact by name\" />\n      {<ContactList />}\n    </div>\n  );\n}\n"],"names":["ContactForm","useState","name","setName","number","setNumber","useCreateContactMutation","addContact","data","useFetchContactsQuery","handleInputChange","event","target","value","className","s","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","type","onChange","pattern","title","required","getFilter","state","filter","ContactList","useDeleteContactMutation","handleDelete","isDeleting","isLoading","filterValue","useSelector","contacts","renderContacts","includes","map","id","onClick","Filter","dispatch","useDispatch","changeFilter","Contacts"],"sourceRoot":""}